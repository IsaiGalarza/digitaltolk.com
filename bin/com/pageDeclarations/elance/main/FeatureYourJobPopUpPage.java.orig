<<<<<<< HEAD
/*
 * FeatureYourJobPopUpPage.java	1.0 05-15-2014
 *
 * Copyright (c) 2001-2014 by David Ramer, Inc. All Rights Reserved.
 *
 * David Ramer grants you ("Licensee") a non-exclusive, royalty free, license to use,
 * modify and redistribute this software in source and binary code form,
 * provided that i) this copyright notice and license appear on all copies of
 * the software; and ii) Licensee does not utilize the software in a manner
 * which is disparaging to David Ramer.
 *
 * This software is provided "AS IS," without a warranty of any kind. ALL
 * EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND WARRANTIES, INCLUDING ANY
 * IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NON-INFRINGEMENT, ARE HEREBY EXCLUDED. David Ramer AND ITS LICENSORS SHALL NOT BE
 * LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING
 * OR DISTRIBUTING THE SOFTWARE OR ITS DERIVATIVES. IN NO EVENT WILL David Ramer OR ITS
 * LICENSORS BE LIABLE FOR ANY LOST REVENUE, PROFIT OR DATA, OR FOR DIRECT,
 * INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE DAMAGES, HOWEVER
 * CAUSED AND REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF THE USE OF
 * OR INABILITY TO USE SOFTWARE, EVEN IF DRamer HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES.
 *
 * This software is not designed or intended for use in on-line control of
 * aircraft, air traffic, aircraft navigation or aircraft communications; or in
 * the design, construction, operation or maintenance of any nuclear
 * facility. Licensee represents and warrants that it will not use or
 * redistribute the Software for such purposes.
 */
/**
 * 
 * @author Ligia
 *
 */
package com.pageDeclarations.elance.main;

import java.util.Locale;

import java.util.MissingResourceException;
import java.util.ResourceBundle;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.Reporter;

import com.common.oTest.oTestBasePageDeclaration;
@SuppressWarnings("deprecation")
public class FeatureYourJobPopUpPage extends oTestBasePageDeclaration {

	private String yesFeatureMyJobButton = "yesFeatureMyJobButton";
	private String noThanksButton = "noThanksButton";
	private String popUpTitleText = "popUpTitleText";
	private String popUpSubTitleText = "popUpSubTitleText";
	private String message1Text = "message1Text";
	private String message2Text = "message2Text";
	private String message3Text = "message3Text";
	
	
	static ResourceBundle resources;
	static {
		try {
			resources = ResourceBundle.getBundle(
					"elance.main.FeatureYourJobPopUpPage", Locale.getDefault());
		} catch (MissingResourceException mre) {
			System.out.println("FeatureYourJobPopUpPage.properties not found: "
					+ mre);
			System.exit(0);
		}
	}

	public FeatureYourJobPopUpPage(WebDriver driver) {

		super(driver, resources);
		pageTitle = new String(resources.getString("pageTitle"));
		pageURL = new String(resources.getString("pageURL"));

	}

	/**
	 * This function Demonstrates isYesFeatureMyJobButtonEnabled(). <br>
	 * 
	 * @exception Catches
	 *                Exception if element not found
	 * @see oTestBasePageDeclaration
	 * @see oTestWebDriverFactory
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public boolean isYesFeatureMyJobButtonEnabled() {
		try {
			WebElement element = findElement(yesFeatureMyJobButton);
			return (element.isEnabled());
		} catch (Exception e) {
			return false;
		}
	}

	/**
	 * This function Demonstrates isYesFeatureMyJobButtonDisplayed(). <br>
	 * 
	 * @exception Catches
	 *                Exception if element not found
	 * @see oTestBasePageDeclaration
	 * @see oTestWebDriverFactory
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public boolean isYesFeatureMyJobButtonDisplayed() {
		try {
			WebElement element = findElement(yesFeatureMyJobButton);
			return (element.isDisplayed());
		} catch (Exception e) {
			return false;
		}
	}

	/**
	 * This function demonstrates clickYesFeatureMyJobButton(). <br>
	 * Function to click theYesFeatureMyJobButton <br>
	 * 
	 * @param None
	 * @returns none.
	 * @exception None.
	 * @see oTestSpreadSheetFactory()
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public void clickYesFeatureMyJobButton() {
		try {
			WebElement element = findElement(yesFeatureMyJobButton);
			element.click();
		} catch (Exception e) {

		}
	}


	/**
	 * This function Demonstrates isNoThanksButtonEnabled(). <br>
	 * 
	 * @exception Catches
	 *                Exception if element not found
	 * @see oTestBasePageDeclaration
	 * @see oTestWebDriverFactory
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public boolean isNoThanksButtonEnabled() {
		try {
			WebElement element = findElement(noThanksButton);
			return (element.isEnabled());
		} catch (Exception e) {
			return false;
		}
	}

	/**
	 * This function Demonstrates isNoThanksButtonDisplayed(). <br>
	 * 
	 * @exception Catches
	 *                Exception if element not found
	 * @see oTestBasePageDeclaration
	 * @see oTestWebDriverFactory
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public boolean isNoThanksButtonDisplayed() {
		try {
			WebElement element = findElement(noThanksButton);
			return (element.isDisplayed());
		} catch (Exception e) {
			return false;
		}
	}

	/**
	 * This function demonstrates clickNoThanksButton(). <br>
	 * Function to click theNoThanksButton <br>
	 * 
	 * @param None
	 * @returns none.
	 * @exception None.
	 * @see oTestSpreadSheetFactory()
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public void clickNoThanksButton() {
		try {
			WebElement element = findElement(noThanksButton);
			element.click();
		} catch (Exception e) {

		}
	}


	/**
	 * This function demonstrates validateFeatureYourJobPopUpPageElements(). <br>
	 * Function provides all @Tests with a function to validate elements on the
	 * login page. <br>
	 * 
	 * @param showWarnings
	 *            - if true will only show warning messages if elements are not
	 *            present. <br>
	 *            False will throw errors if elements are not found.
	 * @return none
	 * @see oTestPasswordVault
	 * @author Ligia
	 * @version 1.0
	 */
	public void validateFeatureYourJobPopUpPageElements(boolean showWarnings) {

		if (showWarnings) {

			if (!isYesFeatureMyJobButtonDisplayed())
				Reporter.log(
						"Warning: YesFeatureMyJobButtonmissing on FeatureYourJobPopUpPage",
						true);

			if (!isNoThanksButtonDisplayed())
				Reporter.log(
						"Warning: NoThanksButtonmissing on FeatureYourJobPopUpPage",
						true);

		} else { // Throw errors
			Assert.assertTrue(isYesFeatureMyJobButtonDisplayed());
			Assert.assertTrue(isNoThanksButtonDisplayed());
		}

	}
	
	/**
	 * This function demonstrates isAllMessageTextDisplayed(). <br>
	 * Function to verify Message Text Displayed <br>
	 * 
	 * @param None
	 * @returns none.
	 * @exception None.
	 * @see oTestSpreadSheetFactory()
	 * @author Ligia Barrera
	 * @version 1.0
	 */	
	public boolean isAllMessageTextDisplayed(){
		boolean result = true;
		
		if(!isTextPresent(resources.getString(popUpTitleText))){
			Reporter.log("Warning! popUpTitleText missing on FeatureYourJobPopUp", true);
			result = false;
		}
		
		if(!isTextPresent(resources.getString(popUpSubTitleText))){
			Reporter.log("Warning! popUpSubTitleText missing on FeatureYourJobPopUp", true);
			result = false;
		}
		
		if(!isTextPresent(resources.getString(message1Text))){
			Reporter.log("Warning! message1Text missing on FeatureYourJobPopUp", true);
			result = false;
		}
		
		if(!isTextPresent(resources.getString(message2Text))){
			Reporter.log("Warning! message2Text missing on FeatureYourJobPopUp", true);
			result = false;
		}
		
		if(!isTextPresent(resources.getString(message3Text))){
			Reporter.log("Warning! message3Text missing on FeatureYourJobPopUp", true);
			result = false;
		}	
		
		return result;
	}
=======
/*
 * FeatureYourJobPopUpPage.java	1.0 05-15-2014
 *
 * Copyright (c) 2001-2014 by David Ramer, Inc. All Rights Reserved.
 *
 * David Ramer grants you ("Licensee") a non-exclusive, royalty free, license to use,
 * modify and redistribute this software in source and binary code form,
 * provided that i) this copyright notice and license appear on all copies of
 * the software; and ii) Licensee does not utilize the software in a manner
 * which is disparaging to David Ramer.
 *
 * This software is provided "AS IS," without a warranty of any kind. ALL
 * EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND WARRANTIES, INCLUDING ANY
 * IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NON-INFRINGEMENT, ARE HEREBY EXCLUDED. David Ramer AND ITS LICENSORS SHALL NOT BE
 * LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING
 * OR DISTRIBUTING THE SOFTWARE OR ITS DERIVATIVES. IN NO EVENT WILL David Ramer OR ITS
 * LICENSORS BE LIABLE FOR ANY LOST REVENUE, PROFIT OR DATA, OR FOR DIRECT,
 * INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE DAMAGES, HOWEVER
 * CAUSED AND REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF THE USE OF
 * OR INABILITY TO USE SOFTWARE, EVEN IF DRamer HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES.
 *
 * This software is not designed or intended for use in on-line control of
 * aircraft, air traffic, aircraft navigation or aircraft communications; or in
 * the design, construction, operation or maintenance of any nuclear
 * facility. Licensee represents and warrants that it will not use or
 * redistribute the Software for such purposes.
 */
/**
 * 
 * @author Ligia
 *
 */
package com.pageDeclarations.elance.main;

import java.util.Locale;

import java.util.MissingResourceException;
import java.util.ResourceBundle;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.Reporter;

import com.common.oTest.oTestBasePageDeclaration;
@SuppressWarnings("deprecation")
public class FeatureYourJobPopUpPage extends oTestBasePageDeclaration {

	private String yesFeatureMyJobButton = "yesFeatureMyJobButton";
	private String noThanksButton = "noThanksButton";
	private String popUpTitleText = "popUpTitleText";
	private String popUpSubTitleText = "popUpSubTitleText";
	private String message1Text = "message1Text";
	private String message2Text = "message2Text";
	private String message3Text = "message3Text";
	
	
	static ResourceBundle resources;
	static {
		try {
			resources = ResourceBundle.getBundle(
					"elance.main.FeatureYourJobPopUpPage", Locale.getDefault());
		} catch (MissingResourceException mre) {
			System.out.println("FeatureYourJobPopUpPage.properties not found: "
					+ mre);
			System.exit(0);
		}
	}

	public FeatureYourJobPopUpPage(WebDriver driver) {

		super(driver, resources);
		pageTitle = new String(resources.getString("pageTitle"));
		pageURL = new String(resources.getString("pageURL"));

	}

	/**
	 * This function Demonstrates isYesFeatureMyJobButtonEnabled(). <br>
	 * 
	 * @exception Catches
	 *                Exception if element not found
	 * @see oTestBasePageDeclaration
	 * @see oTestWebDriverFactory
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public boolean isYesFeatureMyJobButtonEnabled() {
		try {
			WebElement element = findElement(yesFeatureMyJobButton);
			return (element.isEnabled());
		} catch (Exception e) {
			return false;
		}
	}

	/**
	 * This function Demonstrates isYesFeatureMyJobButtonDisplayed(). <br>
	 * 
	 * @exception Catches
	 *                Exception if element not found
	 * @see oTestBasePageDeclaration
	 * @see oTestWebDriverFactory
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public boolean isYesFeatureMyJobButtonDisplayed() {
		try {
			WebElement element = findElement(yesFeatureMyJobButton);
			return (element.isDisplayed());
		} catch (Exception e) {
			return false;
		}
	}

	/**
	 * This function demonstrates clickYesFeatureMyJobButton(). <br>
	 * Function to click theYesFeatureMyJobButton <br>
	 * 
	 * @param None
	 * @returns none.
	 * @exception None.
	 * @see oTestSpreadSheetFactory()
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public void clickYesFeatureMyJobButton() {
		try {
			WebElement element = findElement(yesFeatureMyJobButton);
			element.click();
		} catch (Exception e) {

		}
	}


	/**
	 * This function Demonstrates isNoThanksButtonEnabled(). <br>
	 * 
	 * @exception Catches
	 *                Exception if element not found
	 * @see oTestBasePageDeclaration
	 * @see oTestWebDriverFactory
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public boolean isNoThanksButtonEnabled() {
		try {
			WebElement element = findElement(noThanksButton);
			return (element.isEnabled());
		} catch (Exception e) {
			return false;
		}
	}

	/**
	 * This function Demonstrates isNoThanksButtonDisplayed(). <br>
	 * 
	 * @exception Catches
	 *                Exception if element not found
	 * @see oTestBasePageDeclaration
	 * @see oTestWebDriverFactory
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public boolean isNoThanksButtonDisplayed() {
		try {
			WebElement element = findElement(noThanksButton);
			return (element.isDisplayed());
		} catch (Exception e) {
			return false;
		}
	}

	/**
	 * This function demonstrates clickNoThanksButton(). <br>
	 * Function to click theNoThanksButton <br>
	 * 
	 * @param None
	 * @returns none.
	 * @exception None.
	 * @see oTestSpreadSheetFactory()
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public void clickNoThanksButton() {
		try {
			WebElement element = findElement(noThanksButton);
			element.click();
		} catch (Exception e) {

		}
	}


	/**
	 * This function demonstrates validateFeatureYourJobPopUpPageElements(). <br>
	 * Function provides all @Tests with a function to validate elements on the
	 * login page. <br>
	 * 
	 * @param showWarnings
	 *            - if true will only show warning messages if elements are not
	 *            present. <br>
	 *            False will throw errors if elements are not found.
	 * @return none
	 * @see oTestPasswordVault
	 * @author Ligia
	 * @version 1.0
	 */
	public void validateFeatureYourJobPopUpPageElements(boolean showWarnings) {

		if (showWarnings) {

			if (!isYesFeatureMyJobButtonDisplayed())
				Reporter.log(
						"Warning: YesFeatureMyJobButtonmissing on FeatureYourJobPopUpPage",
						true);

			if (!isNoThanksButtonDisplayed())
				Reporter.log(
						"Warning: NoThanksButtonmissing on FeatureYourJobPopUpPage",
						true);

		} else { // Throw errors
			Assert.assertTrue(isYesFeatureMyJobButtonDisplayed());
			Assert.assertTrue(isNoThanksButtonDisplayed());
		}

	}
	
	/**
	 * This function demonstrates isAllMessageTextDisplayed(). <br>
	 * Function to verify Message Text Displayed <br>
	 * 
	 * @param None
	 * @returns none.
	 * @exception None.
	 * @see oTestSpreadSheetFactory()
	 * @author Ligia Barrera
	 * @version 1.0
	 */	
	public boolean isAllMessageTextDisplayed(){
		boolean result = true;
		
		if(!isTextPresent(resources.getString(popUpTitleText))){
			Reporter.log("Warning! popUpTitleText missing on FeatureYourJobPopUp", true);
			result = false;
		}
		
		if(!isTextPresent(resources.getString(popUpSubTitleText))){
			Reporter.log("Warning! popUpSubTitleText missing on FeatureYourJobPopUp", true);
			result = false;
		}
		
		if(!isTextPresent(resources.getString(message1Text))){
			Reporter.log("Warning! message1Text missing on FeatureYourJobPopUp", true);
			result = false;
		}
		
		if(!isTextPresent(resources.getString(message2Text))){
			Reporter.log("Warning! message2Text missing on FeatureYourJobPopUp", true);
			result = false;
		}
		
		if(!isTextPresent(resources.getString(message3Text))){
			Reporter.log("Warning! message3Text missing on FeatureYourJobPopUp", true);
			result = false;
		}	
		
		return result;
	}
>>>>>>> 9fc64b884953ce51507564b8b56809bc44578f2a
}