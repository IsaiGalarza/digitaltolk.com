/*
 * LoginPage.java	1.0 2014/04/05
 *
 * Copyright (c) 2001 by David Ramer, Inc. All Rights Reserved.
 *
 * David Ramer grants you ("Licensee") a non-exclusive, royalty free, license to use,
 * modify and redistribute this software in source and binary code form,
 * provided that i) this copyright notice and license appear on all copies of
 * the software; and ii) Licensee does not utilize the software in a manner
 * which is disparaging to David Ramer.
 *
 * This software is provided "AS IS," without a warranty of any kind. ALL
 * EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND WARRANTIES, INCLUDING ANY
 * IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NON-INFRINGEMENT, ARE HEREBY EXCLUDED. David Ramer AND ITS LICENSORS SHALL NOT BE
 * LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING
 * OR DISTRIBUTING THE SOFTWARE OR ITS DERIVATIVES. IN NO EVENT WILL David Ramer OR ITS
 * LICENSORS BE LIABLE FOR ANY LOST REVENUE, PROFIT OR DATA, OR FOR DIRECT,
 * INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE DAMAGES, HOWEVER
 * CAUSED AND REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF THE USE OF
 * OR INABILITY TO USE SOFTWARE, EVEN IF DRamer HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES.
 *
 * This software is not designed or intended for use in on-line control of
 * aircraft, air traffic, aircraft navigation or aircraft communications; or in
 * the design, construction, operation or maintenance of any nuclear
 * facility. Licensee represents and warrants that it will not use or
 * redistribute the Software for such purposes.
 */


package com.pageDeclarations.elance.main;

import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.testng.Reporter;

import com.common.oTest.*;
@SuppressWarnings({"deprecation"}) 
public class previewAndPostPage extends oTestBasePageDeclaration {
	
	//
	//preview your job page items
	//
	private String postThisJobBtn = "postThisJobBtn";
	private String editPostBtn="editPostBtn";
	private String saveAndPostLaterLink = "saveAndPostLaterLink";
	private String mconfirmation="mconfirmation";
	
	static ResourceBundle resources;
	
	
	
	static
	{
		try
		{
			resources = ResourceBundle.getBundle("elance.main.previewAndPostPage",Locale.getDefault());
		} catch (MissingResourceException mre) {
			System.out.println("previewAndPostPage.properties not found: "+mre);
			System.exit(0);
		}
	}
	
	public previewAndPostPage(WebDriver driver){
		super(driver,resources);
		pageTitle = new String(resources.getString("pageTitle"));
		pageURL = new String(resources.getString("pageURL"));
	}
	
	/**
	 * This function demonstrates clickPostThisJobBtn().
	 * <br>Function indicates to click post this job button
	 * <br> 
	 * @param None
	 * @returns none.
	 * @exception None.
	 * @see oTestSpreadSheetFactory()
	 * @author Gyanendra
	 * @version 1.0
	 */	
	public void clickPostThisJobBtn(){
		try{
			WebElement element = findElement(postThisJobBtn);
			element.click();
		}catch (Exception e){
			
		}
	}
	
	/**
	 * This function Demonstrates isEditPostBtnDisplayed(). <br>
	 * 
	 * @exception Catches
	 *                Exception if element not found
	 * @see oTestBasePageDeclaration
	 * @see oTestWebDriverFactory
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public boolean isEditPostBtnDisplayed() {
		try {
			WebElement element = findElement(editPostBtn);
			return (element.isDisplayed());
		} catch (Exception e) {
			return false;
		}
	}	
	
	/**
	 * This function Demonstrates isPostThisJobBtnDisplayed(). <br>
	 * 
	 * @exception Catches
	 *                Exception if element not found
	 * @see oTestBasePageDeclaration
	 * @see oTestWebDriverFactory
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public boolean isPostThisJobBtnDisplayed() {
		try {
			WebElement element = findElement(postThisJobBtn);
			return (element.isDisplayed());
		} catch (Exception e) {
			return false;
		}
	}	
	
	/**
	 * This function Demonstrates isPostThisJobBtnDisplayed(). <br>
	 * 
	 * @exception Catches
	 *                Exception if element not found
	 * @see oTestBasePageDeclaration
	 * @see oTestWebDriverFactory
	 * @author Ligia Barrera
	 * @version 1.0
	 */
	public boolean isFeaturedPayment() {
		try {
			
			boolean result = isTextPresent("$25.00");
			return result;
			
		} catch (Exception e) {
			return false;
		}
	}		
	
	/**
	 * This method validates the page element
	 * @author Ligia
	 * @return
	 */
	public boolean pageValidation() {

		boolean sw = true;
		if (!isEditPostBtnDisplayed()) {
			Reporter.log("Warning: EditPostBtn on Preview And Post page!",
					true);
			sw = false;
		}
		if (!isPostThisJobBtnDisplayed()) {
			Reporter.log(
					"Warning: Description PostThisJobBtn on Preview And Post page!",
					true);
			sw = false;
		}


		return sw;

<<<<<<< HEAD
	}
=======
	}	
>>>>>>> 9fc64b884953ce51507564b8b56809bc44578f2a
	
	/**
	 * This function demonstrates clickSaveAndPostLaterLink().
	 * <br>Function indicates to click post this job button
	 * <br> 
	 * @param None
	 * @returns none.
	 * @exception None.
	 * @see oTestSpreadSheetFactory()
	 * @author Wilma
	 * @version 1.0
	 */	
	public void clickSaveAndPostLaterLink(){
		try{
			WebElement element = findElement(saveAndPostLaterLink);
			element.click();
		}catch (Exception e){
			
		}
	}
<<<<<<< HEAD

=======
>>>>>>> 9fc64b884953ce51507564b8b56809bc44578f2a
	
	/**
	 * This function Demonstrates isMessageConfirmationDisplayed(). <br>
	 * 
	 * @exception Catches
	 *                Exception if element not found
	 * @see oTestBasePageDeclaration
	 * @see oTestWebDriverFactory
	 * @author Wilma Cruz
	 * @version 1.0
	 */
	public boolean isMessageConfirmationDisplayed() {
		try {
			WebElement element = findElement(mconfirmation);
			return (element.isDisplayed());
		} catch (Exception e) {
			return false;
		}
	}
	
	
<<<<<<< HEAD
	
=======
>>>>>>> 9fc64b884953ce51507564b8b56809bc44578f2a
}
